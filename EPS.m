clear
close all
clc

%% Solar arrays
power_budget_in = xlsread('EPS.xlsx','C11:C11')+struct2array(load('Q_heater_in.mat','Q_heater_complete')) % power requirement for inner orbit [W]
power_budget_out = xlsread('EPS.xlsx','C11:C11')+struct2array(load('Q_heater_out.mat','Q_heater_complete')) % power requirement for outer orbit [W]

eclipse_time_in = 2478; % eclpise time inner orbit [s]
eclipse_time_out = 2662; % eclpise time outer orbit [s]

r_in = 400; % inner orbit altitude [km]
r_out = 2500; % outer orbit altitude [km]

mu = 0.64169e24*6.6745e-20; % Mars gravitational parameter M*G [km2/s3]
RM = 3396; % Mars equatorial radius [km]
UA = 1.52; % Mars distance from the Sun [UA]

period_in = 2*pi*sqrt((r_in+RM)^3/mu); % inner orbit period [s]
period_out = 2*pi*sqrt((r_out+RM)^3/mu); % inner orbit period [s]

X_e = 0.6;  %| Peak power tracking
X_d = 0.8;  %| assumption

daylight_time_in = period_in - eclipse_time_in; % inner orbit daylight time [s]
daylight_time_out = period_out - eclipse_time_out; % outer orbit daylight time [s]

P_e_in = power_budget_in; % power required during daylight for inner sats [W]
P_d_in = P_e_in; % power required during eclpise for inner sats [W]
P_sa_in = ((P_e_in*eclipse_time_in/X_e) + (P_d_in*daylight_time_in/X_d))/daylight_time_in; % total power required for inner sats [W]
P_sa_in_req = P_sa_in*UA^2 % power for the inner sat to look for on datasheets [W]

P_e_out = power_budget_out; % power required during daylight for outer sats [W]
P_d_out = P_e_out; % power required during eclpise for outer sats [W]
P_sa_out = ((P_e_out*eclipse_time_out/X_e) + (P_d_out*daylight_time_out/X_d))/daylight_time_out; % total power required for outer sats [W]
P_sa_out_req = P_sa_out*UA^2 % power for the inner sat to look for on datasheets [W]

% P_0 = 1353; % base power generated by the solar arrays [W/m^2]
% EOL_efficiency = 0.268; % End of Life efficiency
% P_gen = P_0 * EOL_efficiency; % nominal power generation [W/m^2]
% 
% I_d = 0.72; % inherent nominal degradation
% incidence_angle = 10*pi/180; % Sun incidence angle [rad]
% P_eff = P_gen * I_d * cos(incidence_angle); % worst-case deliverable power [W]
% 
% cells_surface_in = P_sa_in / P_eff % solar panels' surface for inner sats [m^2]
% cells_surface_out = P_sa_out / P_eff % total panels' surface for outer sats [m^2]

%% Batteries
mission_days = 687;     % Mission lifetime: 1 Sol

n_orbits_in = ceil((24*3600)/period_in)*mission_days;       % Discharge cycles # of the inner orbit
n_orbits_out = ceil((24*3600)/period_out)*mission_days;     % Discharge cycles # of the outer orbit

DOD_in = 0.87;      % Depth of Discharge of inner orbit
DOD_out = 0.69;     % Depth of Discharge of outer orbit

eta_b = 0.95;       % Lithium-Ion energy efficiency
N_b = 1;            % Number of batteries

C_in = P_e_in * eclipse_time_in / 3600 / (DOD_in * N_b * eta_b)     % Inner orbit battery capacity requirement [Wh]
C_out = P_e_out * eclipse_time_out / 3600 / (DOD_out * N_b * eta_b) % Outer orbit battery capacity requirement [Wh]